import { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import { BsChevronCompactLeft, BsChevronCompactRight } from 'react-icons/bs';
import { RxDotFilled } from 'react-icons/rx';

import JSConfetti from 'js-confetti';

import LineGradient from '../components/LineGradient';

//images
import imgResult1Before from '../assets/result1_before.jpeg';
import imgResult1After from '../assets/result1_after.jpeg';
import imgResult2Before from '../assets/result2_before.jpeg';
import imgResult2After from '../assets/result2_after.jpeg';
import imgResult3Before from '../assets/result3_before.jpeg';
import imgResult3After from '../assets/result3_after.jpeg';
import imgResult4Before from '../assets/result4_before.jpeg';
import imgResult4After from '../assets/result4_after.jpeg';
import imgResult5Before from '../assets/result5_before.jpeg';
import imgResult5After from '../assets/result5_after.jpeg';

const imgResultsSlides1 = [
  { id: crypto.randomUUID(), image: imgResult1After },
  { id: crypto.randomUUID(), image: imgResult1Before },
];

const imgResultsSlides2 = [
  { id: crypto.randomUUID(), image: imgResult2After },
  { id: crypto.randomUUID(), image: imgResult2Before },
];

const imgResultsSlides3 = [
  { id: crypto.randomUUID(), image: imgResult3After },
  { id: crypto.randomUUID(), image: imgResult3Before },
];

const imgResultsSlides4 = [
  { id: crypto.randomUUID(), image: imgResult4After },
  { id: crypto.randomUUID(), image: imgResult4Before },
];

const imgResultsSlides5 = [
  { id: crypto.randomUUID(), image: imgResult5After },
  { id: crypto.randomUUID(), image: imgResult5Before },
];

const container = {
  hidden: {},
  visible: {
    transition: {
      staggerChildren: 0.2,
    },
  },
};

const Result = ({ title, id, setShowTextBefore }) => {
  const [currentIndex, setCurrentIndex] = useState(0);

  const overlayStyles = `absolute h-full w-full opacity-0 hover:opacity-60 transition duration-500
    bg-grey z-30 flex flex-col justify-center items-center text-center p-16 text-deep-blue`;
  const projectTitle = title.split(' ').join('-').toLowerCase();

  /* useEffect(() => {
    if (id === 1) {
      setCurrentIndex(0);
    }
    if (id === 2) {
      setCurrentIndex(+2);
    }
    if (id === 3) {
      setCurrentIndex(+4);
    }
    if (id === 4) {
      setCurrentIndex(+6);
    }
    if (id === 5) {
      setCurrentIndex(+8);
    }
  }, []); */

  function nextSlide(id) {
    if (id === 1) {
      const isLastSlide = currentIndex === imgResultsSlides1.length - 1;
      const newIndex = isLastSlide ? 0 : currentIndex + 1;
      setCurrentIndex(newIndex);
      setShowTextBefore((prevVal) => !prevVal);
    }

    if (id === 2) {
      const isLastSlide = currentIndex === imgResultsSlides2.length - 1;
      const newIndex = isLastSlide ? 0 : currentIndex + 1;
      setCurrentIndex(newIndex);
      setShowTextBefore((prevVal) => !prevVal);
    }

    if (id === 3) {
      const isLastSlide = currentIndex === imgResultsSlides3.length - 1;
      const newIndex = isLastSlide ? 0 : currentIndex + 1;
      setCurrentIndex(newIndex);
      setShowTextBefore((prevVal) => !prevVal);
    }

    if (id === 4) {
      const isLastSlide = currentIndex === imgResultsSlides4.length - 1;
      const newIndex = isLastSlide ? 0 : currentIndex + 1;
      setCurrentIndex(newIndex);
      setShowTextBefore((prevVal) => !prevVal);
    }

    if (id === 5) {
      const isLastSlide = currentIndex === imgResultsSlides5.length - 1;
      const newIndex = isLastSlide ? 0 : currentIndex + 1;
      setCurrentIndex(newIndex);
      setShowTextBefore((prevVal) => !prevVal);
    }

    return;
  }

  function previousSlide(id) {
    if (id === 1) {
      const isFirstSlide = currentIndex === 0;
      const newIndex = isFirstSlide
        ? imgResultsSlides1.length - 1
        : currentIndex - 1;
      setCurrentIndex(newIndex);
      setShowTextBefore((prevVal) => !prevVal);
    }

    if (id === 2) {
      const isFirstSlide = currentIndex === 0;
      const newIndex = isFirstSlide
        ? imgResultsSlides2.length - 1
        : currentIndex - 1;
      setCurrentIndex(newIndex);
      setShowTextBefore((prevVal) => !prevVal);
    }

    if (id === 3) {
      const isFirstSlide = currentIndex === 0;
      const newIndex = isFirstSlide
        ? imgResultsSlides3.length - 1
        : currentIndex - 1;
      setCurrentIndex(newIndex);
      setShowTextBefore((prevVal) => !prevVal);
    }

    if (id === 4) {
      const isFirstSlide = currentIndex === 0;
      const newIndex = isFirstSlide
        ? imgResultsSlides4.length - 1
        : currentIndex - 1;
      setCurrentIndex(newIndex);
      setShowTextBefore((prevVal) => !prevVal);
    }

    if (id === 5) {
      const isFirstSlide = currentIndex === 0;
      const newIndex = isFirstSlide
        ? imgResultsSlides5.length - 1
        : currentIndex - 1;
      setCurrentIndex(newIndex);
      setShowTextBefore((prevVal) => !prevVal);
    }

    return;
  }

  function showImages() {
    if (id === 1) {
      return imgResultsSlides1[currentIndex].image;
    }

    if (id === 2) {
      return imgResultsSlides2[currentIndex].image;
    }

    if (id === 3) {
      return imgResultsSlides3[currentIndex].image;
    }

    if (id === 4) {
      return imgResultsSlides4[currentIndex].image;
    }

    if (id === 5) {
      return imgResultsSlides5[currentIndex].image;
    }
  }

  return (
    <motion.div
      className="relative"
      initial="hidden"
      whileInView="visible"
      viewport={{ once: true, amount: 0.5 }}
      transition={{ duration: 0.5 }}
      variants={{
        hidden: { opacity: 0, scale: 0.8 },
        visible: { opacity: 1, scale: 1 },
      }}
    >
      {/* <div className={overlayStyles}>
        <h3 className="text-center">–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥–æ –∫—É—Ä—Å—É</h3>
      </div> */}
      <div className="relative flex max-h-[700px] max-w-[400px]">
        {/* Left Arrow */}
        <div className="absolute top-[50%] left-5 -translate-x-0 translate-y-[-50%] cursor-pointer rounded-full bg-black/20 p-2 text-2xl text-white">
          <BsChevronCompactLeft size={60} onClick={() => previousSlide(id)} />
        </div>
        {/* Right Arrow */}
        <div className="absolute top-[50%] right-5 -translate-x-0 translate-y-[-50%] cursor-pointer rounded-full bg-black/20 p-2 text-2xl text-white">
          <BsChevronCompactRight size={60} onClick={() => nextSlide(id)} />
        </div>
        <img
          className="h-auto w-auto rounded-3xl"
          /* src={imgResultsSlides[currentIndex]?.image} */
          src={showImages()}
          alt={projectTitle}
        />

        {/* <img
          className="h-auto w-auto"
          src={imgResult1Before}
          alt={projectTitle}
        /> */}
      </div>
    </motion.div>
  );
};

const Results = () => {
  const [showTextBefore, setShowTextBefore] = useState(false);

  const jsConfetti = new JSConfetti();

  useEffect(() => {
    function fireConfetti() {
      jsConfetti.addConfetti({
        confettiRadius: 1,
        confettiColors: ['#000', 'hotpink', 'gold'],
        confettiNumber: 100,
        emojis: ['üåà', '‚ö°Ô∏è', 'üí•', '‚ú®', 'üí´', 'üå∏'],
        emojiSize: 100,
      });
    }
    fireConfetti();
  }, []);

  return (
    <section
      id="—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏"
      /* className="pt-28 pb-28 md:pt-28 pb-28 xxs:pt-28 pb-28 mt-0" */
      className="pt-18 pb-28 xxs:mt-0"
    >
      {/* pt-48 pb-48 */}
      {/* HEADINGS */}
      <motion.div
        className="mx-auto text-center md:w-2/5"
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.5 }}
        transition={{ duration: 0.5 }}
        variants={{
          hidden: { opacity: 0, y: -50 },
          visible: { opacity: 1, y: 0 },
        }}
      >
        <div>
          <div>
            <p className="font-playfair text-4xl font-semibold">
              <span className="text-red">–†–ï–ó</span>–£–õ–¨–¢–ê–¢–ò
            </p>
            <div className="mt-5 flex justify-center">
              <LineGradient width="w-2/3" />
            </div>
          </div>
          <p className="mt-10 mb-10">
            –ë–∞–≥–∞—Ç—å–æ–º –º–æ—ó–º —É—á–Ω—è–º —É–∂–µ –≤–¥–∞–ª–æ—Å—è –¥–æ—Å—è–≥—Ç–∏ —á—É–¥–æ–≤–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø—ñ—Å–ª—è
            –º–æ–≥–æ –¢—ñ–∫–¢–æ–∫ –∫—É—Ä—Å—É!
          </p>
        </div>
      </motion.div>

      {/* RESULTS */}
      <div className="flex justify-center">
        <motion.div
          className="xxs:grid xxs:auto-cols-auto xxs:gap-8 sm:grid sm:grid-cols-2"
          variants={container}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.2 }}
        >
          {/* ROW 1 */}
          <div className="flex max-h-[400px] max-w-[400px] flex-col xxs:gap-6">
            <div className=" rounded-3xl bg-red p-10 text-center font-playfair text-sm xxs:mt-6 sm:mt-0">
              <p>–Ü—Ä–∏–Ω–∞, –º–∞–º–∞ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω–∫–∞ –∑–∞–∫–æ—Ä–¥–æ–Ω</p>
              <p>
                üìç –°—Ç–∞—Ä—Ç: –ù–µ–≤—ñ—Ä–∞ —É –∞–ª–≥–æ—Ä–∏—Ç–º–∏ –¢—ñ–∫–¢–æ–∫—É, –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –ø–µ—Ä–µ–≥–ª—è–¥–∏,
                –∑–π–æ–º–∫–∞ –Ω–∞ –∞–≤–æ—Å—å, –±–∞–∂–∞–Ω–Ω—è –º–æ–Ω–µ—Ç–∏–∑–∞—Ü—ñ—ó –±–ª–æ–≥—É
              </p>
              <p>
                {' '}
                üî• –†–µ–∑—É–ª—å—Ç–∞—Ç: –ø—ñ–≤–º—ñ–ª—å–π–æ–Ω–Ω—ñ –ø–µ—Ä–µ–≥–ª—è–¥–∏ –æ–¥–∏–Ω –∑–∞ –æ–¥–Ω–∏–º ü•≥ —Ñ—É–¥/—Ç—Ä–∞–≤–µ–ª
                –±–ª–æ–≥–µ—Ä üî• —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ –∑ –∑–∞–∫–ª–∞–¥–∞–º–∏, –º—ñ—Å—Ü—è–º–∏ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É,
                —ñ–Ω—Å—Ç–∞–≥—Ä–∞–º-–ø–ª–µ–π—Å–∞–º–∏ üî• üí∏ –∑–∞—Ä–æ–±—ñ—Ç–æ–∫ —É –¢—ñ–∫–¢–æ—Ü—ñ —Ç–∞ –Ü–Ω—Å—Ç–∞–≥—Ä–∞–º—ñ(–∑–∞
                –¥–æ–ø–æ–º–æ–≥–æ—é –¢—ñ–∫–¢–æ–∫—É) üî•
              </p>
            </div>
            <p className="rounded-3xl bg-blue p-6 text-center font-playfair text-2xl font-semibold">
              {!showTextBefore
                ? '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ—Å–ª—è –∫—É—Ä—Å—É üòç'
                : '–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ –∫—É—Ä—Å—É ‚òπÔ∏è'}
            </p>
          </div>
          <Result
            title="Project 1"
            id={1}
            setShowTextBefore={setShowTextBefore}
          />

          {/* ROW 2 */}
          <div className="flex max-h-[400px] max-w-[400px] flex-col xxs:gap-6">
            <div className=" rounded-3xl bg-red p-10 text-center font-playfair text-sm xxs:mt-6 sm:mt-0">
              <p>–ê–Ω–≥–µ–ª—ñ–Ω–∞, –º–∞–º–∞ —É –¥–µ–∫—Ä–µ—Ç—ñ, –∞–∫—Ç–æ—Ä–∫–∞</p>
              <p>üìç –°—Ç–∞—Ä—Ç: 1500 –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤</p>
              <p>
                {' '}
                üî• –†–µ–∑—É–ª—å—Ç–∞—Ç: 97 —Ç–∏—Å—è—á –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ üî• –í–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∞ —Å—Ö–µ–º—É –∑ –ö—É—Ä—Å—É
                üî• 20.000 –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ –∑–∞ 2 –≤—ñ–¥–µ–æ! ü•≥ –ö–æ–∂–Ω–µ –≤—ñ–¥–µ–æ —É –†–ï–ö üî• –Ω–∞
                —Ç–∏—Å—è—á–Ω—ñ-–º—ñ–ª—å–π–æ–Ω—ñ –ø–µ—Ä–µ–≥–ª—è–¥–∏! üî• –°–ø—ñ–≤–ø—Ä–∞—Ü—è –∑ –±—Ä–µ–Ω–¥–∞–º–∏! üî•
                –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—è –∞—É–¥–∏—Ç–æ—Ä—ñ—ó –≤ –Ü–Ω—Å—Ç–∞–≥—Ä–∞–º! üî• üí∏ –ó–∞—Ä–æ–±—ñ—Ç–æ–∫ –∑ –¢—ñ–∫–¢–æ–∫—É —Ç–∞
                –Ü–Ω—Å—Ç–∞–≥—Ä–∞–º üî•
              </p>
            </div>
            <p className="rounded-3xl bg-blue p-6 text-center font-playfair text-2xl font-semibold">
              {!showTextBefore
                ? '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ—Å–ª—è –∫—É—Ä—Å—É üòç'
                : '–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ –∫—É—Ä—Å—É ‚òπÔ∏è'}
            </p>
          </div>
          <Result
            title="Project 2"
            id={2}
            setShowTextBefore={setShowTextBefore}
          />

          {/* ROW 3 */}
          <div className="flex max-h-[400px] max-w-[400px] flex-col xxs:gap-6">
            <div className=" rounded-3xl bg-red p-10 text-center font-playfair text-sm xxs:mt-6 sm:mt-0">
              <p>–í—ñ–∫—Ç–æ—Ä—ñ—è, –º–∞–º–∞ —É –¥–µ–∫—Ä–µ—Ç—ñ</p>
              <p>üìç –°—Ç–∞—Ä—Ç: –ö—É–ø—É–≤–∞–ª–∞ —ñ–Ω—à—ñ –ö—É—Ä—Å–∏ - –Ω–µ –¥–æ–ø–æ–º–æ–≥–ª–∏ üëé</p>
              <p>
                {' '}
                üî• –†–µ–∑—É–ª—å—Ç–∞—Ç: –ü—ñ—Å–ª—è –º–æ–≥–æ –ö—É—Ä—Å—É üî• –æ–¥—Ä–∞–∑—É –ø—ñ—à–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏! üí™
                –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Å—Ö–µ–º—É –∑ –ö—É—Ä—Å—É üî• –∑–∞—Ä–æ–±—ñ—Ç–æ–∫ –ø—Ä–∏ –º–∞–ª–µ–Ω—å–∫—ñ–π –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
                –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ ü•≥ –ö–æ–∂–Ω–µ –≤—ñ–¥–µ–æ —É –†–ï–ö üî• –Ω–∞ —Ç–∏—Å—è—á–Ω—ñ-–º—ñ–ª—å–π–æ–Ω—ñ
                –ø–µ—Ä–µ–≥–ª—è–¥–∏! üî•
              </p>
            </div>
            <p className="rounded-3xl bg-blue p-6 text-center font-playfair text-2xl font-semibold">
              {!showTextBefore
                ? '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ—Å–ª—è –∫—É—Ä—Å—É üòç'
                : '–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ –∫—É—Ä—Å—É ‚òπÔ∏è'}
            </p>
          </div>
          <Result
            title="Project 3"
            id={3}
            setShowTextBefore={setShowTextBefore}
          />

          {/* ROW 4 */}
          <div className="flex max-h-[400px] max-w-[400px] flex-col xxs:gap-6">
            <div className=" rounded-3xl bg-red p-10 text-center font-playfair text-sm xxs:mt-6 sm:mt-0">
              <p>–Æ–ª—ñ—è, –º–∞–º–∞ —É –¥–µ–∫—Ä–µ—Ç—ñ</p>
              <p>
                üìç –°—Ç–∞—Ä—Ç: –ù–µ—Ä–æ–∑—É–º—ñ–Ω–Ω—è –∞–ª–≥–æ—Ä–∏—Ç–º—ñ–≤ –¢—ñ–∫–¢–æ–∫, –±–∞–∂–∞–Ω–Ω—è —Ä–æ–∑–≤–∏–≤–∞—Ç–∏—Å—è —ñ
                –∑–∞—Ä–æ–±–ª—è—Ç–∏ –≤ –¢—ñ–∫–¢–æ–∫
              </p>
              <p>
                {' '}
                üî• –†–µ–∑—É–ª—å—Ç–∞—Ç: –°–ª—ñ–¥—É–≤–∞–Ω–Ω—è –Ω–∞–π–µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–∏–º –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º –∑ –ö—É—Ä—Å—É üî•
                –ö–æ–∂–Ω–µ –≤—ñ–¥–µ–æ —É –†–ï–ö üî• —Ç–∏—Å—è—á–Ω—ñ-–ø—ñ–≤–º—ñ–ª—å–π–æ–Ω–Ω—ñ –ø–µ—Ä–µ–≥–ª—è–¥–∏ üí∏
                –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü—ñ—è –±–ª–æ–≥—É! üî•
              </p>
            </div>
            <p className="rounded-3xl bg-blue p-6 text-center font-playfair text-2xl font-semibold">
              {!showTextBefore
                ? '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ—Å–ª—è –∫—É—Ä—Å—É üòç'
                : '–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ –∫—É—Ä—Å—É ‚òπÔ∏è'}
            </p>
          </div>
          <Result
            title="Project 4"
            id={4}
            setShowTextBefore={setShowTextBefore}
          />

          {/* ROW 5 */}
          <div className="fl flex max-h-[400px] max-w-[400px] flex-col xxs:gap-6">
            <div className=" rounded-3xl bg-red p-10 text-center font-playfair text-sm xxs:mt-6 sm:mt-0">
              <p>–ê–Ω–Ω–∞, –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥</p>
              <p>
                üìç –°—Ç–∞—Ä—Ç: –ù–µ—Ä–æ–∑—É–º—ñ–Ω–Ω—è —è–∫ –∑–Ω–∞–π—Ç–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤ —á–µ—Ä–µ–∑ –¢—ñ–∫–¢–æ–∫ —Ç–∞
                –ø–æ—Ç—Ä–∞–ø–ª—è—Ç–∏ —É –†–ï–ö
              </p>
              <p>
                {' '}
                üî• –†–µ–∑—É–ª—å—Ç–∞—Ç: –†–æ–∑–≤–∏–Ω—É—Ç–∏–π –µ–∫—Å–ø–µ—Ä—Ç–Ω–∏–π –±–ª–æ–≥ üî• –¢–∏—Å—è—á—ñ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏—Ö
                –∫–ª—ñ—î–Ω—Ç—ñ–≤ üî• –ö–æ–∂–Ω–µ –≤—ñ–¥–µ–æ —Å–∞–º–æ—Ä–µ–∫–ª–∞–º–∏ —Å–≤–æ—ó—Ö –ø–æ—Å–ª—É–≥ —É –†–ï–ö üî•
                –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ ü•≥
              </p>
            </div>
            <p className="rounded-3xl bg-blue p-6 text-center font-playfair text-2xl font-semibold">
              {!showTextBefore
                ? '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ—Å–ª—è –∫—É—Ä—Å—É üòç'
                : '–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ –∫—É—Ä—Å—É ‚òπÔ∏è'}
            </p>
          </div>
          <Result
            title="Project 5"
            id={5}
            setShowTextBefore={setShowTextBefore}
          />
        </motion.div>
      </div>
    </section>
  );
};

export default Results;
